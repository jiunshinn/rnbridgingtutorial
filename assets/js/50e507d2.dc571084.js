"use strict";(self.webpackChunkbridging_tutorial_website=self.webpackChunkbridging_tutorial_website||[]).push([[9495],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>v});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,v=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?i.createElement(v,o(o({ref:t},s),{},{components:n})):i.createElement(v,o({ref:t},s))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_label:"View types",sidebar_position:2,title:"View types"},o=void 0,l={unversionedId:"view-reference/view-types",id:"view-reference/view-types",title:"View types",description:"There are 3 types of native components that can be used inside React Native application.",source:"@site/docs/view-reference/view-types.mdx",sourceDirName:"view-reference",slug:"/view-reference/view-types",permalink:"/rnbridgingtutorial/docs/view-reference/view-types",draft:!1,editUrl:"https://github.com/mateusz1913/rnbridgingtutorial/tree/main/docs/docs/view-reference/view-types.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"View types",sidebar_position:2,title:"View types"},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/rnbridgingtutorial/docs/view-reference/view-intro"},next:{title:"View props",permalink:"/rnbridgingtutorial/docs/view-reference/view-props-types"}},p={},c=[{value:"Enhanced React <code>&lt;View /&gt;</code>",id:"enhanced-react-view-",level:3},{value:"Native View",id:"native-view",level:3},{value:"Heavy layout (UIViewControllers/Fragments)",id:"heavy-layout-uiviewcontrollersfragments",level:3}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"There are 3 types of native components that can be used inside React Native application."),(0,r.kt)("h3",{id:"enhanced-react-view-"},"Enhanced React ",(0,r.kt)("inlineCode",{parentName:"h3"},"<View />")),(0,r.kt)("p",null,"Built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"<View />")," is powerful component that is used in every RN app. However, sometimes we would like to extend it with some new functionality."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Typical use case:"),(0,r.kt)("p",{parentName:"admonition"},"Create a component with some custom gradient background that should behave like a ",(0,r.kt)("inlineCode",{parentName:"p"},"<View />")," (styling, displaying child views, a11y, etc.)")),(0,r.kt)("p",null,"Check out ",(0,r.kt)("a",{parentName:"p",href:"https://r.mtdv.me/FtXpuO4X9f"},"React View tutorial")),(0,r.kt)("h3",{id:"native-view"},"Native View"),(0,r.kt)("p",null,"Sometimes RN app needs to access some specific platform component that may not be implemented in React Native core."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Typical use case:"),(0,r.kt)("p",{parentName:"admonition"},"Bridge a native component like RadioButton, Slider (possibly using some native dependency e.g. Android MaterialComponents)")),(0,r.kt)("p",null,"Check out ",(0,r.kt)("a",{parentName:"p",href:"https://r.mtdv.me/FtXpuO4X9f"},"Native View tutorial")),(0,r.kt)("h3",{id:"heavy-layout-uiviewcontrollersfragments"},"Heavy layout (UIViewControllers/Fragments)"),(0,r.kt)("p",null,"Rarely, RN app needs to display some complex native layout, that may be hard/impossible to be embedded inside a native view.\nAlthough, the chance that you will face such challenge is tiny, it's still good to know how to tackle it."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Typical use case:"),(0,r.kt)("p",{parentName:"admonition"},"Bridge heavy native layout like native listview, or epub reader")),(0,r.kt)("p",null,"Check out ",(0,r.kt)("a",{parentName:"p",href:"https://r.mtdv.me/FtXpuO4X9f"},"Heavy layout tutorial")))}d.isMDXComponent=!0}}]);